name: CD

on:
  push:
    tags:
      - "v*"
jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com"

      - name: Wait for CI check to pass
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-ci
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: build (16.x)
          ref: ${{ github.event.head }}

      - name: Stop workflow
        if: steps.wait-for-ci.outputs.conclusion != 'success'
        run: node -e 'process.exit(1)'

  image-push-scp-build-file:
    needs: wait-for-ci
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com"

      - name: Install dependencies
        run: npm install

      - name: Run Build
        run: npm run build

      - name: Generate DB Schema
        run: npx prisma generate

      - name: Set env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          target: prod
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{env.REPOSITORY_NAME}}:latest
            ghcr.io/${{ github.repository_owner }}/${{env.REPOSITORY_NAME}}:${{ env.RELEASE_VERSION }}

      - name: Upload build file to ec2
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./dist
          remote: /home/ubuntu/volunteer-server/dist/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          privateKey: ${{ secrets.SSH_KEY }}
          recursive: true

      - name: Upload prisma to ec2
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./prisma
          remote: /home/ubuntu/volunteer-server/prisma/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          privateKey: ${{ secrets.SSH_KEY }}
          recursive: true

      - name: Upload copy package to ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "package*.json"
          target: "/home/ubuntu/volunteer-server/"

      - name: Update ec2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/volunteer-server
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            npx prisma migrate deploy
            npm ci
            pm2 kill
            nf -e .env run npm run pm2
